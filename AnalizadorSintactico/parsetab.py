
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APPEND ARRAY BEGIN BREAK CADENA CASE CDER CIZQ COMA COMENTARIO COMP_IGUAL CONSTANTE DIFERENTE DIVISION DO ELSE END ENTERO FOR FUNCION HASH IF IGUAL IN INCLUDE INTERROGACION MAS MAYOR MENOR OR PDER PIZQ POP POTENCIA PROD PUNTO PUSH PUTS RANGO RESTA REVERSE SPLIT THEN UNLESS VARIABLE_CLASE VARIABLE_GLOBAL VARIABLE_LOCAL VARIABLE_OBJETO WHEN WHILEcodigo : algoritmo\n                | algoritmo codigo\n     algoritmo : asignacion\n                    | sentenciaWHILE\n                    | sentenciaFOR\n                    | puts\n                    | unless\n                    | comentarios\n                    | sentenciaIf\n                    | sentenciaCASE\n                    | slicing\n                    | sentenciaBegin\n                    | sentenciaFuncion\n                    | split\n                    | push\n                    | append\n                    | pop\n\n     unless : UNLESS comparacion codigo END\n     sentenciaFOR : FOR variables IN range DO codigo END\n     range : ENTERO RANGO ENTERO\n     puts : PUTS valor\n\n\n      reverse : CADENA PUNTO REVERSE\n\n    \n         split : CADENA PUNTO SPLIT PIZQ valorsplit PDER\n    \n       push : variables PUNTO PUSH PIZQ valor PDER\n    \n        append : variables PUNTO APPEND PIZQ valor PDER\n    \n        pop : variables PUNTO POP  PIZQ valor PDER\n            | variables PUNTO POP PIZQ  PDER\n    \n         valorsplit : CADENA\n                    | CADENA COMA ENTERO\n    \n        include : CADENA PUNTO INCLUDE INTERROGACION CADENA\n     sentenciaFuncion : FUNCION  variables codigo  END\n    sentenciaWHILE : WHILE  comparacion DO codigo END\n     sentenciaCASE : CASE variables sentenciaWhens ELSE codigo END\n     sentenciaWHEN : WHEN valorSencillo codigo\n                        | WHEN valorSencillo THEN codigo\n     sentenciaAND : comparacion AND comparacion\n     sentenciaOR : comparacion OR comparacion\n    sentenciaWhens : sentenciaWHEN\n                |  sentenciaWHEN sentenciaWhens\n     valorSencillo : ENTERO\n                | variables\n                | CADENA\n                | RANGO\n    sentenciaBegin : BEGIN codigo ENDasignacion : variables IGUAL expresion expresion : valor\n     slicing : variables CIZQ ENTERO\n                | variables CIZQ ENTERO COMA ENTERO\n                | variables CIZQ RANGO\n                | variables CIZQ CADENA\n    expresion : valor operadorMat expresion\n                | PIZQ valor operadorMat expresion PDER\n    comparacion : expresion operadorComp expresion\n        | PIZQ expresion PDER operadorComp expresion\n        | PIZQ expresion operadorComp expresion PDER\n     comparaciones : comparacion\n                      | sentenciaAND\n                      | sentenciaOR\n     sentenciaBREAK : BREAK\n                        | BREAK variables\n    operadorMat : MAS\n                | RESTA\n                | PROD\n                | DIVISION\n                | POTENCIA\n    operadorComp : MAYOR\n                | MENOR\n                | COMP_IGUAL\n                | DIFERENTE\n    valor : ENTERO\n                | variables\n                | CADENA\n                | HASH\n                | ARRAY\n                | split\n                | include\n                | reverse\n     variables : VARIABLE_LOCAL\n                | VARIABLE_GLOBAL\n                | VARIABLE_OBJETO\n                | VARIABLE_CLASE\n                | CONSTANTE\n     sentenciaIf : IF comparaciones codigo finalIf\n     finalIf : END\n                | sentenciaBREAK END\n     comentarios : COMENTARIO\n    '
    
_lr_action_items = {'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,27,29,30,31,32,33,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,63,64,65,69,93,101,105,107,110,111,112,115,116,117,119,120,121,122,123,125,127,131,132,137,139,143,147,148,149,150,151,152,153,156,159,160,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,19,-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,19,19,-56,-57,-58,19,-45,-47,-49,-50,19,-44,-53,-51,-22,-18,-83,-84,-36,-37,19,19,-40,-41,-42,-43,-31,-48,-27,-32,19,-85,19,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,27,29,30,31,32,33,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,63,64,65,69,93,101,105,107,110,111,112,115,116,117,119,120,121,122,123,125,127,131,132,137,139,143,147,148,149,150,151,152,153,156,159,160,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,20,-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,20,20,-56,-57,-58,20,-45,-47,-49,-50,20,-44,-53,-51,-22,-18,-83,-84,-36,-37,20,20,-40,-41,-42,-43,-31,-48,-27,-32,20,-85,20,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'PUTS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,27,29,30,31,32,33,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,63,64,65,69,93,101,105,107,110,111,112,115,116,117,119,120,121,122,123,125,127,131,132,137,139,143,147,148,149,150,151,152,153,156,159,160,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,21,-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,21,21,-56,-57,-58,21,-45,-47,-49,-50,21,-44,-53,-51,-22,-18,-83,-84,-36,-37,21,21,-40,-41,-42,-43,-31,-48,-27,-32,21,-85,21,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'UNLESS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,27,29,30,31,32,33,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,63,64,65,69,93,101,105,107,110,111,112,115,116,117,119,120,121,122,123,125,127,131,132,137,139,143,147,148,149,150,151,152,153,156,159,160,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,22,-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,22,22,-56,-57,-58,22,-45,-47,-49,-50,22,-44,-53,-51,-22,-18,-83,-84,-36,-37,22,22,-40,-41,-42,-43,-31,-48,-27,-32,22,-85,22,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'COMENTARIO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,27,29,30,31,32,33,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,63,64,65,69,93,101,105,107,110,111,112,115,116,117,119,120,121,122,123,125,127,131,132,137,139,143,147,148,149,150,151,152,153,156,159,160,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,23,-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,23,23,-56,-57,-58,23,-45,-47,-49,-50,23,-44,-53,-51,-22,-18,-83,-84,-36,-37,23,23,-40,-41,-42,-43,-31,-48,-27,-32,23,-85,23,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,27,29,30,31,32,33,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,63,64,65,69,93,101,105,107,110,111,112,115,116,117,119,120,121,122,123,125,127,131,132,137,139,143,147,148,149,150,151,152,153,156,159,160,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,24,-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,24,24,-56,-57,-58,24,-45,-47,-49,-50,24,-44,-53,-51,-22,-18,-83,-84,-36,-37,24,24,-40,-41,-42,-43,-31,-48,-27,-32,24,-85,24,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'CASE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,27,29,30,31,32,33,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,63,64,65,69,93,101,105,107,110,111,112,115,116,117,119,120,121,122,123,125,127,131,132,137,139,143,147,148,149,150,151,152,153,156,159,160,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,25,-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,25,25,-56,-57,-58,25,-45,-47,-49,-50,25,-44,-53,-51,-22,-18,-83,-84,-36,-37,25,25,-40,-41,-42,-43,-31,-48,-27,-32,25,-85,25,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'BEGIN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,27,29,30,31,32,33,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,63,64,65,69,93,101,105,107,110,111,112,115,116,117,119,120,121,122,123,125,127,131,132,137,139,143,147,148,149,150,151,152,153,156,159,160,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,27,-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,27,27,-56,-57,-58,27,-45,-47,-49,-50,27,-44,-53,-51,-22,-18,-83,-84,-36,-37,27,27,-40,-41,-42,-43,-31,-48,-27,-32,27,-85,27,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'FUNCION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,27,29,30,31,32,33,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,63,64,65,69,93,101,105,107,110,111,112,115,116,117,119,120,121,122,123,125,127,131,132,137,139,143,147,148,149,150,151,152,153,156,159,160,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,28,-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,28,28,-56,-57,-58,28,-45,-47,-49,-50,28,-44,-53,-51,-22,-18,-83,-84,-36,-37,28,28,-40,-41,-42,-43,-31,-48,-27,-32,28,-85,28,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'CADENA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,21,22,23,24,27,29,30,31,32,33,35,36,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,62,63,64,65,69,70,71,72,73,74,77,78,79,80,81,82,87,88,91,93,97,98,99,101,103,104,105,107,110,111,112,115,116,117,119,120,121,122,123,124,125,126,127,131,132,133,136,137,139,143,147,148,149,150,151,152,153,156,159,160,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,44,44,44,-86,44,26,-78,-79,-80,-81,-82,44,65,44,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,26,26,-56,-57,-58,26,-45,44,-47,-49,-50,26,44,-66,-67,-68,-69,44,-61,-62,-63,-64,-65,44,44,122,-44,44,44,44,-53,44,44,-51,-22,-18,-83,-84,-36,-37,26,26,-40,-41,-42,-43,144,-31,44,-48,-27,-32,44,153,26,-85,26,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'VARIABLE_LOCAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,62,63,64,65,69,70,71,72,73,74,77,78,79,80,81,82,87,88,91,93,97,98,99,101,103,104,105,107,110,111,112,114,115,116,117,119,120,121,122,123,125,126,127,131,132,133,137,139,143,147,148,149,150,151,152,153,156,159,160,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,29,29,29,29,-86,29,29,29,29,-78,-79,-80,-81,-82,29,29,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,29,29,-56,-57,-58,29,-45,29,-47,-49,-50,29,29,-66,-67,-68,-69,29,-61,-62,-63,-64,-65,29,29,29,-44,29,29,29,-53,29,29,-51,-22,-18,-83,-84,29,-36,-37,29,29,-40,-41,-42,-43,-31,29,-48,-27,-32,29,29,-85,29,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'VARIABLE_GLOBAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,62,63,64,65,69,70,71,72,73,74,77,78,79,80,81,82,87,88,91,93,97,98,99,101,103,104,105,107,110,111,112,114,115,116,117,119,120,121,122,123,125,126,127,131,132,133,137,139,143,147,148,149,150,151,152,153,156,159,160,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,30,30,30,30,-86,30,30,30,30,-78,-79,-80,-81,-82,30,30,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,30,30,-56,-57,-58,30,-45,30,-47,-49,-50,30,30,-66,-67,-68,-69,30,-61,-62,-63,-64,-65,30,30,30,-44,30,30,30,-53,30,30,-51,-22,-18,-83,-84,30,-36,-37,30,30,-40,-41,-42,-43,-31,30,-48,-27,-32,30,30,-85,30,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'VARIABLE_OBJETO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,62,63,64,65,69,70,71,72,73,74,77,78,79,80,81,82,87,88,91,93,97,98,99,101,103,104,105,107,110,111,112,114,115,116,117,119,120,121,122,123,125,126,127,131,132,133,137,139,143,147,148,149,150,151,152,153,156,159,160,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,31,31,31,31,-86,31,31,31,31,-78,-79,-80,-81,-82,31,31,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,31,31,-56,-57,-58,31,-45,31,-47,-49,-50,31,31,-66,-67,-68,-69,31,-61,-62,-63,-64,-65,31,31,31,-44,31,31,31,-53,31,31,-51,-22,-18,-83,-84,31,-36,-37,31,31,-40,-41,-42,-43,-31,31,-48,-27,-32,31,31,-85,31,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'VARIABLE_CLASE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,62,63,64,65,69,70,71,72,73,74,77,78,79,80,81,82,87,88,91,93,97,98,99,101,103,104,105,107,110,111,112,114,115,116,117,119,120,121,122,123,125,126,127,131,132,133,137,139,143,147,148,149,150,151,152,153,156,159,160,],[32,32,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,32,32,32,32,-86,32,32,32,32,-78,-79,-80,-81,-82,32,32,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,32,32,-56,-57,-58,32,-45,32,-47,-49,-50,32,32,-66,-67,-68,-69,32,-61,-62,-63,-64,-65,32,32,32,-44,32,32,32,-53,32,32,-51,-22,-18,-83,-84,32,-36,-37,32,32,-40,-41,-42,-43,-31,32,-48,-27,-32,32,32,-85,32,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'CONSTANTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,35,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,60,61,62,63,64,65,69,70,71,72,73,74,77,78,79,80,81,82,87,88,91,93,97,98,99,101,103,104,105,107,110,111,112,114,115,116,117,119,120,121,122,123,125,126,127,131,132,133,137,139,143,147,148,149,150,151,152,153,156,159,160,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,33,33,33,33,-86,33,33,33,33,-78,-79,-80,-81,-82,33,33,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,33,33,-56,-57,-58,33,-45,33,-47,-49,-50,33,33,-66,-67,-68,-69,33,-61,-62,-63,-64,-65,33,33,33,-44,33,33,33,-53,33,33,-51,-22,-18,-83,-84,33,-36,-37,33,33,-40,-41,-42,-43,-31,33,-48,-27,-32,33,33,-85,33,-24,-25,-26,-54,-55,-52,-30,-33,-23,-19,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,29,30,31,32,33,34,41,42,43,44,45,46,47,48,49,51,61,63,64,65,93,105,107,110,111,112,125,127,131,132,139,147,148,149,152,153,156,159,160,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,-78,-79,-80,-81,-82,-2,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,-45,-47,-49,-50,-44,-51,-22,-18,-83,-84,-31,-48,-27,-32,-85,-24,-25,-26,-52,-30,-33,-23,-19,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,29,30,31,32,33,34,41,42,43,44,45,46,47,48,49,51,59,61,63,64,65,85,86,93,94,100,105,107,110,111,112,113,114,125,127,131,132,139,140,141,147,148,149,152,153,154,156,159,160,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,-78,-79,-80,-81,-82,-2,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,93,-45,-47,-49,-50,110,112,-44,125,132,-51,-22,-18,-83,-84,139,-59,-31,-48,-27,-32,-85,-60,156,-24,-25,-26,-52,-30,160,-33,-23,-19,]),'BREAK':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,29,30,31,32,33,34,41,42,43,44,45,46,47,48,49,51,61,63,64,65,86,93,105,107,110,111,112,125,127,131,132,139,147,148,149,152,153,156,159,160,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,-78,-79,-80,-81,-82,-2,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,-45,-47,-49,-50,114,-44,-51,-22,-18,-83,-84,-31,-48,-27,-32,-85,-24,-25,-26,-52,-30,-33,-23,-19,]),'WHEN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,29,30,31,32,33,34,41,42,43,44,45,46,47,48,49,51,57,61,63,64,65,90,93,105,107,110,111,112,125,127,131,132,139,142,147,148,149,152,153,156,157,159,160,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,-78,-79,-80,-81,-82,-2,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,91,-45,-47,-49,-50,91,-44,-51,-22,-18,-83,-84,-31,-48,-27,-32,-85,-34,-24,-25,-26,-52,-30,-33,-35,-23,-19,]),'ELSE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,23,29,30,31,32,33,34,41,42,43,44,45,46,47,48,49,51,61,63,64,65,89,90,93,105,107,110,111,112,118,125,127,131,132,139,142,147,148,149,152,153,156,157,159,160,],[-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-86,-78,-79,-80,-81,-82,-2,-46,-70,-71,-72,-73,-74,-75,-76,-77,-21,-45,-47,-49,-50,117,-38,-44,-51,-22,-18,-83,-84,-39,-31,-48,-27,-32,-85,-34,-24,-25,-26,-52,-30,-33,-35,-23,-19,]),'IGUAL':([18,29,30,31,32,33,],[35,-78,-79,-80,-81,-82,]),'CIZQ':([18,29,30,31,32,33,],[36,-78,-79,-80,-81,-82,]),'PUNTO':([18,26,29,30,31,32,33,44,],[37,58,-78,-79,-80,-81,-82,83,]),'PIZQ':([19,22,24,35,40,66,67,68,70,71,72,73,74,77,78,79,80,81,82,87,88,92,103,104,126,133,],[40,40,40,62,62,97,98,99,62,-66,-67,-68,-69,62,-61,-62,-63,-64,-65,40,40,124,62,62,62,62,]),'ENTERO':([19,21,22,24,35,36,40,62,70,71,72,73,74,77,78,79,80,81,82,84,87,88,91,96,97,98,99,103,104,126,133,138,158,],[42,42,42,42,42,63,42,42,42,-66,-67,-68,-69,42,-61,-62,-63,-64,-65,109,42,42,120,127,42,42,42,42,42,42,42,155,161,]),'HASH':([19,21,22,24,35,40,62,70,71,72,73,74,77,78,79,80,81,82,87,88,97,98,99,103,104,126,133,],[45,45,45,45,45,45,45,45,-66,-67,-68,-69,45,-61,-62,-63,-64,-65,45,45,45,45,45,45,45,45,45,]),'ARRAY':([19,21,22,24,35,40,62,70,71,72,73,74,77,78,79,80,81,82,87,88,97,98,99,103,104,126,133,],[46,46,46,46,46,46,46,46,-66,-67,-68,-69,46,-61,-62,-63,-64,-65,46,46,46,46,46,46,46,46,46,]),'MAS':([29,30,31,32,33,41,42,43,44,45,46,47,48,49,76,95,107,153,159,],[-78,-79,-80,-81,-82,78,-70,-71,-72,-73,-74,-75,-76,-77,78,78,-22,-30,-23,]),'RESTA':([29,30,31,32,33,41,42,43,44,45,46,47,48,49,76,95,107,153,159,],[-78,-79,-80,-81,-82,79,-70,-71,-72,-73,-74,-75,-76,-77,79,79,-22,-30,-23,]),'PROD':([29,30,31,32,33,41,42,43,44,45,46,47,48,49,76,95,107,153,159,],[-78,-79,-80,-81,-82,80,-70,-71,-72,-73,-74,-75,-76,-77,80,80,-22,-30,-23,]),'DIVISION':([29,30,31,32,33,41,42,43,44,45,46,47,48,49,76,95,107,153,159,],[-78,-79,-80,-81,-82,81,-70,-71,-72,-73,-74,-75,-76,-77,81,81,-22,-30,-23,]),'POTENCIA':([29,30,31,32,33,41,42,43,44,45,46,47,48,49,76,95,107,153,159,],[-78,-79,-80,-81,-82,82,-70,-71,-72,-73,-74,-75,-76,-77,82,82,-22,-30,-23,]),'MAYOR':([29,30,31,32,33,39,41,42,43,44,45,46,47,48,49,75,76,102,105,107,135,152,153,159,],[-78,-79,-80,-81,-82,71,-46,-70,-71,-72,-73,-74,-75,-76,-77,71,-46,71,-51,-22,-51,-52,-30,-23,]),'MENOR':([29,30,31,32,33,39,41,42,43,44,45,46,47,48,49,75,76,102,105,107,135,152,153,159,],[-78,-79,-80,-81,-82,72,-46,-70,-71,-72,-73,-74,-75,-76,-77,72,-46,72,-51,-22,-51,-52,-30,-23,]),'COMP_IGUAL':([29,30,31,32,33,39,41,42,43,44,45,46,47,48,49,75,76,102,105,107,135,152,153,159,],[-78,-79,-80,-81,-82,73,-46,-70,-71,-72,-73,-74,-75,-76,-77,73,-46,73,-51,-22,-51,-52,-30,-23,]),'DIFERENTE':([29,30,31,32,33,39,41,42,43,44,45,46,47,48,49,75,76,102,105,107,135,152,153,159,],[-78,-79,-80,-81,-82,74,-46,-70,-71,-72,-73,-74,-75,-76,-77,74,-46,74,-51,-22,-51,-52,-30,-23,]),'IN':([29,30,31,32,33,50,],[-78,-79,-80,-81,-82,84,]),'PDER':([29,30,31,32,33,41,42,43,44,45,46,47,48,49,75,76,99,105,107,128,129,130,134,135,144,145,146,152,153,159,161,],[-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,102,-46,131,-51,-22,147,148,149,151,152,-28,159,152,-52,-30,-23,-29,]),'DO':([29,30,31,32,33,38,41,42,43,44,45,46,47,48,49,101,105,107,108,150,151,152,153,155,159,],[-78,-79,-80,-81,-82,69,-46,-70,-71,-72,-73,-74,-75,-76,-77,-53,-51,-22,137,-54,-55,-52,-30,-20,-23,]),'AND':([29,30,31,32,33,41,42,43,44,45,46,47,48,49,54,101,105,107,150,151,152,153,159,],[-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,87,-53,-51,-22,-54,-55,-52,-30,-23,]),'OR':([29,30,31,32,33,41,42,43,44,45,46,47,48,49,54,101,105,107,150,151,152,153,159,],[-78,-79,-80,-81,-82,-46,-70,-71,-72,-73,-74,-75,-76,-77,88,-53,-51,-22,-54,-55,-52,-30,-23,]),'THEN':([29,30,31,32,33,119,120,121,122,123,],[-78,-79,-80,-81,-82,143,-40,-41,-42,-43,]),'RANGO':([36,91,109,],[64,123,138,]),'PUSH':([37,],[66,]),'APPEND':([37,],[67,]),'POP':([37,],[68,]),'SPLIT':([58,83,],[92,92,]),'COMA':([63,144,],[96,158,]),'INCLUDE':([83,],[106,]),'REVERSE':([83,],[107,]),'INTERROGACION':([106,],[136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigo':([0,2,27,52,53,60,69,117,119,137,143,],[1,34,59,85,86,94,100,141,142,154,157,]),'algoritmo':([0,2,27,52,53,60,69,117,119,137,143,],[2,2,2,2,2,2,2,2,2,2,2,]),'asignacion':([0,2,27,52,53,60,69,117,119,137,143,],[3,3,3,3,3,3,3,3,3,3,3,]),'sentenciaWHILE':([0,2,27,52,53,60,69,117,119,137,143,],[4,4,4,4,4,4,4,4,4,4,4,]),'sentenciaFOR':([0,2,27,52,53,60,69,117,119,137,143,],[5,5,5,5,5,5,5,5,5,5,5,]),'puts':([0,2,27,52,53,60,69,117,119,137,143,],[6,6,6,6,6,6,6,6,6,6,6,]),'unless':([0,2,27,52,53,60,69,117,119,137,143,],[7,7,7,7,7,7,7,7,7,7,7,]),'comentarios':([0,2,27,52,53,60,69,117,119,137,143,],[8,8,8,8,8,8,8,8,8,8,8,]),'sentenciaIf':([0,2,27,52,53,60,69,117,119,137,143,],[9,9,9,9,9,9,9,9,9,9,9,]),'sentenciaCASE':([0,2,27,52,53,60,69,117,119,137,143,],[10,10,10,10,10,10,10,10,10,10,10,]),'slicing':([0,2,27,52,53,60,69,117,119,137,143,],[11,11,11,11,11,11,11,11,11,11,11,]),'sentenciaBegin':([0,2,27,52,53,60,69,117,119,137,143,],[12,12,12,12,12,12,12,12,12,12,12,]),'sentenciaFuncion':([0,2,27,52,53,60,69,117,119,137,143,],[13,13,13,13,13,13,13,13,13,13,13,]),'split':([0,2,19,21,22,24,27,35,40,52,53,60,62,69,70,77,87,88,97,98,99,103,104,117,119,126,133,137,143,],[14,14,47,47,47,47,14,47,47,14,14,14,47,14,47,47,47,47,47,47,47,47,47,14,14,47,47,14,14,]),'push':([0,2,27,52,53,60,69,117,119,137,143,],[15,15,15,15,15,15,15,15,15,15,15,]),'append':([0,2,27,52,53,60,69,117,119,137,143,],[16,16,16,16,16,16,16,16,16,16,16,]),'pop':([0,2,27,52,53,60,69,117,119,137,143,],[17,17,17,17,17,17,17,17,17,17,17,]),'variables':([0,2,19,20,21,22,24,25,27,28,35,40,52,53,60,62,69,70,77,87,88,91,97,98,99,103,104,114,117,119,126,133,137,143,],[18,18,43,50,43,43,43,57,18,60,43,43,18,18,18,43,18,43,43,43,43,121,43,43,43,43,43,140,18,18,43,43,18,18,]),'comparacion':([19,22,24,87,88,],[38,52,54,115,116,]),'expresion':([19,22,24,35,40,70,77,87,88,103,104,126,133,],[39,39,39,61,75,101,105,39,39,134,135,146,150,]),'valor':([19,21,22,24,35,40,62,70,77,87,88,97,98,99,103,104,126,133,],[41,51,41,41,41,76,95,41,41,41,41,128,129,130,41,41,41,41,]),'include':([19,21,22,24,35,40,62,70,77,87,88,97,98,99,103,104,126,133,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'reverse':([19,21,22,24,35,40,62,70,77,87,88,97,98,99,103,104,126,133,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'comparaciones':([24,],[53,]),'sentenciaAND':([24,],[55,]),'sentenciaOR':([24,],[56,]),'operadorComp':([39,75,102,],[70,103,133,]),'operadorMat':([41,76,95,],[77,104,126,]),'sentenciaWhens':([57,90,],[89,118,]),'sentenciaWHEN':([57,90,],[90,90,]),'range':([84,],[108,]),'finalIf':([86,],[111,]),'sentenciaBREAK':([86,],[113,]),'valorSencillo':([91,],[119,]),'valorsplit':([124,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigo","S'",1,None,None,None),
  ('codigo -> algoritmo','codigo',1,'p_codigo','sintactico_yacc.py',30),
  ('codigo -> algoritmo codigo','codigo',2,'p_codigo','sintactico_yacc.py',31),
  ('algoritmo -> asignacion','algoritmo',1,'p_algoritmo','sintactico_yacc.py',34),
  ('algoritmo -> sentenciaWHILE','algoritmo',1,'p_algoritmo','sintactico_yacc.py',35),
  ('algoritmo -> sentenciaFOR','algoritmo',1,'p_algoritmo','sintactico_yacc.py',36),
  ('algoritmo -> puts','algoritmo',1,'p_algoritmo','sintactico_yacc.py',37),
  ('algoritmo -> unless','algoritmo',1,'p_algoritmo','sintactico_yacc.py',38),
  ('algoritmo -> comentarios','algoritmo',1,'p_algoritmo','sintactico_yacc.py',39),
  ('algoritmo -> sentenciaIf','algoritmo',1,'p_algoritmo','sintactico_yacc.py',40),
  ('algoritmo -> sentenciaCASE','algoritmo',1,'p_algoritmo','sintactico_yacc.py',41),
  ('algoritmo -> slicing','algoritmo',1,'p_algoritmo','sintactico_yacc.py',42),
  ('algoritmo -> sentenciaBegin','algoritmo',1,'p_algoritmo','sintactico_yacc.py',43),
  ('algoritmo -> sentenciaFuncion','algoritmo',1,'p_algoritmo','sintactico_yacc.py',44),
  ('algoritmo -> split','algoritmo',1,'p_algoritmo','sintactico_yacc.py',45),
  ('algoritmo -> push','algoritmo',1,'p_algoritmo','sintactico_yacc.py',46),
  ('algoritmo -> append','algoritmo',1,'p_algoritmo','sintactico_yacc.py',47),
  ('algoritmo -> pop','algoritmo',1,'p_algoritmo','sintactico_yacc.py',48),
  ('unless -> UNLESS comparacion codigo END','unless',4,'p_unless','sintactico_yacc.py',53),
  ('sentenciaFOR -> FOR variables IN range DO codigo END','sentenciaFOR',7,'p_sentenciaFor','sintactico_yacc.py',56),
  ('range -> ENTERO RANGO ENTERO','range',3,'p_range','sintactico_yacc.py',60),
  ('puts -> PUTS valor','puts',2,'p_puts','sintactico_yacc.py',64),
  ('reverse -> CADENA PUNTO REVERSE','reverse',3,'p_reverse','sintactico_yacc.py',69),
  ('split -> CADENA PUNTO SPLIT PIZQ valorsplit PDER','split',6,'p_split','sintactico_yacc.py',74),
  ('push -> variables PUNTO PUSH PIZQ valor PDER','push',6,'p_push','sintactico_yacc.py',78),
  ('append -> variables PUNTO APPEND PIZQ valor PDER','append',6,'p_append','sintactico_yacc.py',82),
  ('pop -> variables PUNTO POP PIZQ valor PDER','pop',6,'p_pop','sintactico_yacc.py',86),
  ('pop -> variables PUNTO POP PIZQ PDER','pop',5,'p_pop','sintactico_yacc.py',87),
  ('valorsplit -> CADENA','valorsplit',1,'p_valorsplit','sintactico_yacc.py',91),
  ('valorsplit -> CADENA COMA ENTERO','valorsplit',3,'p_valorsplit','sintactico_yacc.py',92),
  ('include -> CADENA PUNTO INCLUDE INTERROGACION CADENA','include',5,'p_include','sintactico_yacc.py',96),
  ('sentenciaFuncion -> FUNCION variables codigo END','sentenciaFuncion',4,'p_sentenciaFuncion','sintactico_yacc.py',100),
  ('sentenciaWHILE -> WHILE comparacion DO codigo END','sentenciaWHILE',5,'p_sentenciaWhile','sintactico_yacc.py',104),
  ('sentenciaCASE -> CASE variables sentenciaWhens ELSE codigo END','sentenciaCASE',6,'p_sentenciaCase','sintactico_yacc.py',108),
  ('sentenciaWHEN -> WHEN valorSencillo codigo','sentenciaWHEN',3,'p_sentenciaWhen','sintactico_yacc.py',112),
  ('sentenciaWHEN -> WHEN valorSencillo THEN codigo','sentenciaWHEN',4,'p_sentenciaWhen','sintactico_yacc.py',113),
  ('sentenciaAND -> comparacion AND comparacion','sentenciaAND',3,'p_sentenciaAnd','sintactico_yacc.py',116),
  ('sentenciaOR -> comparacion OR comparacion','sentenciaOR',3,'p_sentenciaOr','sintactico_yacc.py',119),
  ('sentenciaWhens -> sentenciaWHEN','sentenciaWhens',1,'p_sentenciaWhens','sintactico_yacc.py',122),
  ('sentenciaWhens -> sentenciaWHEN sentenciaWhens','sentenciaWhens',2,'p_sentenciaWhens','sintactico_yacc.py',123),
  ('valorSencillo -> ENTERO','valorSencillo',1,'p_valorSencillo','sintactico_yacc.py',127),
  ('valorSencillo -> variables','valorSencillo',1,'p_valorSencillo','sintactico_yacc.py',128),
  ('valorSencillo -> CADENA','valorSencillo',1,'p_valorSencillo','sintactico_yacc.py',129),
  ('valorSencillo -> RANGO','valorSencillo',1,'p_valorSencillo','sintactico_yacc.py',130),
  ('sentenciaBegin -> BEGIN codigo END','sentenciaBegin',3,'p_sentenciaBegin','sintactico_yacc.py',133),
  ('asignacion -> variables IGUAL expresion','asignacion',3,'p_asignacion','sintactico_yacc.py',136),
  ('expresion -> valor','expresion',1,'p_expresion','sintactico_yacc.py',140),
  ('slicing -> variables CIZQ ENTERO','slicing',3,'p_slicing','sintactico_yacc.py',144),
  ('slicing -> variables CIZQ ENTERO COMA ENTERO','slicing',5,'p_slicing','sintactico_yacc.py',145),
  ('slicing -> variables CIZQ RANGO','slicing',3,'p_slicing','sintactico_yacc.py',146),
  ('slicing -> variables CIZQ CADENA','slicing',3,'p_slicing','sintactico_yacc.py',147),
  ('expresion -> valor operadorMat expresion','expresion',3,'p_expresion_aritmetica','sintactico_yacc.py',151),
  ('expresion -> PIZQ valor operadorMat expresion PDER','expresion',5,'p_expresion_aritmetica','sintactico_yacc.py',152),
  ('comparacion -> expresion operadorComp expresion','comparacion',3,'p_comparacion','sintactico_yacc.py',156),
  ('comparacion -> PIZQ expresion PDER operadorComp expresion','comparacion',5,'p_comparacion','sintactico_yacc.py',157),
  ('comparacion -> PIZQ expresion operadorComp expresion PDER','comparacion',5,'p_comparacion','sintactico_yacc.py',158),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','sintactico_yacc.py',162),
  ('comparaciones -> sentenciaAND','comparaciones',1,'p_comparaciones','sintactico_yacc.py',163),
  ('comparaciones -> sentenciaOR','comparaciones',1,'p_comparaciones','sintactico_yacc.py',164),
  ('sentenciaBREAK -> BREAK','sentenciaBREAK',1,'p_sentenciaBreak','sintactico_yacc.py',168),
  ('sentenciaBREAK -> BREAK variables','sentenciaBREAK',2,'p_sentenciaBreak','sintactico_yacc.py',169),
  ('operadorMat -> MAS','operadorMat',1,'p_operadorMat','sintactico_yacc.py',173),
  ('operadorMat -> RESTA','operadorMat',1,'p_operadorMat','sintactico_yacc.py',174),
  ('operadorMat -> PROD','operadorMat',1,'p_operadorMat','sintactico_yacc.py',175),
  ('operadorMat -> DIVISION','operadorMat',1,'p_operadorMat','sintactico_yacc.py',176),
  ('operadorMat -> POTENCIA','operadorMat',1,'p_operadorMat','sintactico_yacc.py',177),
  ('operadorComp -> MAYOR','operadorComp',1,'p_operadorComp','sintactico_yacc.py',180),
  ('operadorComp -> MENOR','operadorComp',1,'p_operadorComp','sintactico_yacc.py',181),
  ('operadorComp -> COMP_IGUAL','operadorComp',1,'p_operadorComp','sintactico_yacc.py',182),
  ('operadorComp -> DIFERENTE','operadorComp',1,'p_operadorComp','sintactico_yacc.py',183),
  ('valor -> ENTERO','valor',1,'p_valor','sintactico_yacc.py',188),
  ('valor -> variables','valor',1,'p_valor','sintactico_yacc.py',189),
  ('valor -> CADENA','valor',1,'p_valor','sintactico_yacc.py',190),
  ('valor -> HASH','valor',1,'p_valor','sintactico_yacc.py',191),
  ('valor -> ARRAY','valor',1,'p_valor','sintactico_yacc.py',192),
  ('valor -> split','valor',1,'p_valor','sintactico_yacc.py',193),
  ('valor -> include','valor',1,'p_valor','sintactico_yacc.py',194),
  ('valor -> reverse','valor',1,'p_valor','sintactico_yacc.py',195),
  ('variables -> VARIABLE_LOCAL','variables',1,'p_variables','sintactico_yacc.py',199),
  ('variables -> VARIABLE_GLOBAL','variables',1,'p_variables','sintactico_yacc.py',200),
  ('variables -> VARIABLE_OBJETO','variables',1,'p_variables','sintactico_yacc.py',201),
  ('variables -> VARIABLE_CLASE','variables',1,'p_variables','sintactico_yacc.py',202),
  ('variables -> CONSTANTE','variables',1,'p_variables','sintactico_yacc.py',203),
  ('sentenciaIf -> IF comparaciones codigo finalIf','sentenciaIf',4,'p_sentenciaIf','sintactico_yacc.py',206),
  ('finalIf -> END','finalIf',1,'p_finalIf','sintactico_yacc.py',210),
  ('finalIf -> sentenciaBREAK END','finalIf',2,'p_finalIf','sintactico_yacc.py',211),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','sintactico_yacc.py',215),
]
