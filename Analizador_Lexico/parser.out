Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    AND
    ARRAY
    BREAK
    CADENA
    CASE
    CDER
    CIZQ
    ELSE
    FOR
    FUNCION
    HASH
    IF
    LDER
    LIZQ
    OR
    PDER
    PIZQ
    POTENCIA
    PUTS
    RANGO
    UNLESS

Grammar

Rule 0     S' -> codigo
Rule 1     codigo -> algoritmo
Rule 2     codigo -> algoritmo codigo
Rule 3     algoritmo -> asignacion
Rule 4     algoritmo -> expresion
Rule 5     algoritmo -> comparacion
Rule 6     algoritmo -> sentenciaWHILE
Rule 7     sentenciaWHILE -> WHILE comparacion DO codigo END
Rule 8     asignacion -> variables IGUAL expresion
Rule 9     expresion -> valor
Rule 10    expresion -> valor operadorMat expresion
Rule 11    comparacion -> expresion operadorComp expresion
Rule 12    operadorMat -> MAS
Rule 13    operadorMat -> RESTA
Rule 14    operadorMat -> PROD
Rule 15    operadorMat -> DIVISION
Rule 16    operadorComp -> MAYOR
Rule 17    operadorComp -> MENOR
Rule 18    operadorComp -> IGUAL
Rule 19    operadorComp -> DIFERENTE
Rule 20    valor -> ENTERO
Rule 21    valor -> variables
Rule 22    variables -> VARIABLE_LOCAL
Rule 23    variables -> VARIABLE_GLOBAL
Rule 24    variables -> VARIABLE_OBJETO
Rule 25    variables -> VARIABLE_CLASE
Rule 26    variables -> CONSTANTE

Terminals, with rules where they appear

ALIAS                : 
AND                  : 
ARRAY                : 
BREAK                : 
CADENA               : 
CASE                 : 
CDER                 : 
CIZQ                 : 
CONSTANTE            : 26
DIFERENTE            : 19
DIVISION             : 15
DO                   : 7
ELSE                 : 
END                  : 7
ENTERO               : 20
FOR                  : 
FUNCION              : 
HASH                 : 
IF                   : 
IGUAL                : 8 18
LDER                 : 
LIZQ                 : 
MAS                  : 12
MAYOR                : 16
MENOR                : 17
OR                   : 
PDER                 : 
PIZQ                 : 
POTENCIA             : 
PROD                 : 14
PUTS                 : 
RANGO                : 
RESTA                : 13
UNLESS               : 
VARIABLE_CLASE       : 25
VARIABLE_GLOBAL      : 23
VARIABLE_LOCAL       : 22
VARIABLE_OBJETO      : 24
WHILE                : 7
error                : 

Nonterminals, with rules where they appear

algoritmo            : 1 2
asignacion           : 3
codigo               : 2 7 0
comparacion          : 5 7
expresion            : 4 8 10 11 11
operadorComp         : 11
operadorMat          : 10
sentenciaWHILE       : 6
valor                : 9 10
variables            : 8 21

Parsing method: LALR

state 0

    (0) S' -> . codigo
    (1) codigo -> . algoritmo
    (2) codigo -> . algoritmo codigo
    (3) algoritmo -> . asignacion
    (4) algoritmo -> . expresion
    (5) algoritmo -> . comparacion
    (6) algoritmo -> . sentenciaWHILE
    (8) asignacion -> . variables IGUAL expresion
    (9) expresion -> . valor
    (10) expresion -> . valor operadorMat expresion
    (11) comparacion -> . expresion operadorComp expresion
    (7) sentenciaWHILE -> . WHILE comparacion DO codigo END
    (22) variables -> . VARIABLE_LOCAL
    (23) variables -> . VARIABLE_GLOBAL
    (24) variables -> . VARIABLE_OBJETO
    (25) variables -> . VARIABLE_CLASE
    (26) variables -> . CONSTANTE
    (20) valor -> . ENTERO
    (21) valor -> . variables

    WHILE           shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 11
    VARIABLE_OBJETO shift and go to state 12
    VARIABLE_CLASE  shift and go to state 13
    CONSTANTE       shift and go to state 14
    ENTERO          shift and go to state 15

    codigo                         shift and go to state 1
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresion                      shift and go to state 4
    comparacion                    shift and go to state 5
    sentenciaWHILE                 shift and go to state 6
    variables                      shift and go to state 7
    valor                          shift and go to state 8

state 1

    (0) S' -> codigo .



state 2

    (1) codigo -> algoritmo .
    (2) codigo -> algoritmo . codigo
    (1) codigo -> . algoritmo
    (2) codigo -> . algoritmo codigo
    (3) algoritmo -> . asignacion
    (4) algoritmo -> . expresion
    (5) algoritmo -> . comparacion
    (6) algoritmo -> . sentenciaWHILE
    (8) asignacion -> . variables IGUAL expresion
    (9) expresion -> . valor
    (10) expresion -> . valor operadorMat expresion
    (11) comparacion -> . expresion operadorComp expresion
    (7) sentenciaWHILE -> . WHILE comparacion DO codigo END
    (22) variables -> . VARIABLE_LOCAL
    (23) variables -> . VARIABLE_GLOBAL
    (24) variables -> . VARIABLE_OBJETO
    (25) variables -> . VARIABLE_CLASE
    (26) variables -> . CONSTANTE
    (20) valor -> . ENTERO
    (21) valor -> . variables

    $end            reduce using rule 1 (codigo -> algoritmo .)
    END             reduce using rule 1 (codigo -> algoritmo .)
    WHILE           shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 11
    VARIABLE_OBJETO shift and go to state 12
    VARIABLE_CLASE  shift and go to state 13
    CONSTANTE       shift and go to state 14
    ENTERO          shift and go to state 15

    algoritmo                      shift and go to state 2
    codigo                         shift and go to state 16
    asignacion                     shift and go to state 3
    expresion                      shift and go to state 4
    comparacion                    shift and go to state 5
    sentenciaWHILE                 shift and go to state 6
    variables                      shift and go to state 7
    valor                          shift and go to state 8

state 3

    (3) algoritmo -> asignacion .

    WHILE           reduce using rule 3 (algoritmo -> asignacion .)
    VARIABLE_LOCAL  reduce using rule 3 (algoritmo -> asignacion .)
    VARIABLE_GLOBAL reduce using rule 3 (algoritmo -> asignacion .)
    VARIABLE_OBJETO reduce using rule 3 (algoritmo -> asignacion .)
    VARIABLE_CLASE  reduce using rule 3 (algoritmo -> asignacion .)
    CONSTANTE       reduce using rule 3 (algoritmo -> asignacion .)
    ENTERO          reduce using rule 3 (algoritmo -> asignacion .)
    $end            reduce using rule 3 (algoritmo -> asignacion .)
    END             reduce using rule 3 (algoritmo -> asignacion .)


state 4

    (4) algoritmo -> expresion .
    (11) comparacion -> expresion . operadorComp expresion
    (16) operadorComp -> . MAYOR
    (17) operadorComp -> . MENOR
    (18) operadorComp -> . IGUAL
    (19) operadorComp -> . DIFERENTE

    WHILE           reduce using rule 4 (algoritmo -> expresion .)
    VARIABLE_LOCAL  reduce using rule 4 (algoritmo -> expresion .)
    VARIABLE_GLOBAL reduce using rule 4 (algoritmo -> expresion .)
    VARIABLE_OBJETO reduce using rule 4 (algoritmo -> expresion .)
    VARIABLE_CLASE  reduce using rule 4 (algoritmo -> expresion .)
    CONSTANTE       reduce using rule 4 (algoritmo -> expresion .)
    ENTERO          reduce using rule 4 (algoritmo -> expresion .)
    $end            reduce using rule 4 (algoritmo -> expresion .)
    END             reduce using rule 4 (algoritmo -> expresion .)
    MAYOR           shift and go to state 18
    MENOR           shift and go to state 19
    IGUAL           shift and go to state 20
    DIFERENTE       shift and go to state 21

    operadorComp                   shift and go to state 17

state 5

    (5) algoritmo -> comparacion .

    WHILE           reduce using rule 5 (algoritmo -> comparacion .)
    VARIABLE_LOCAL  reduce using rule 5 (algoritmo -> comparacion .)
    VARIABLE_GLOBAL reduce using rule 5 (algoritmo -> comparacion .)
    VARIABLE_OBJETO reduce using rule 5 (algoritmo -> comparacion .)
    VARIABLE_CLASE  reduce using rule 5 (algoritmo -> comparacion .)
    CONSTANTE       reduce using rule 5 (algoritmo -> comparacion .)
    ENTERO          reduce using rule 5 (algoritmo -> comparacion .)
    $end            reduce using rule 5 (algoritmo -> comparacion .)
    END             reduce using rule 5 (algoritmo -> comparacion .)


state 6

    (6) algoritmo -> sentenciaWHILE .

    WHILE           reduce using rule 6 (algoritmo -> sentenciaWHILE .)
    VARIABLE_LOCAL  reduce using rule 6 (algoritmo -> sentenciaWHILE .)
    VARIABLE_GLOBAL reduce using rule 6 (algoritmo -> sentenciaWHILE .)
    VARIABLE_OBJETO reduce using rule 6 (algoritmo -> sentenciaWHILE .)
    VARIABLE_CLASE  reduce using rule 6 (algoritmo -> sentenciaWHILE .)
    CONSTANTE       reduce using rule 6 (algoritmo -> sentenciaWHILE .)
    ENTERO          reduce using rule 6 (algoritmo -> sentenciaWHILE .)
    $end            reduce using rule 6 (algoritmo -> sentenciaWHILE .)
    END             reduce using rule 6 (algoritmo -> sentenciaWHILE .)


state 7

    (8) asignacion -> variables . IGUAL expresion
    (21) valor -> variables .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 22
    MAS             reduce using rule 21 (valor -> variables .)
    RESTA           reduce using rule 21 (valor -> variables .)
    PROD            reduce using rule 21 (valor -> variables .)
    DIVISION        reduce using rule 21 (valor -> variables .)
    MAYOR           reduce using rule 21 (valor -> variables .)
    MENOR           reduce using rule 21 (valor -> variables .)
    DIFERENTE       reduce using rule 21 (valor -> variables .)
    WHILE           reduce using rule 21 (valor -> variables .)
    VARIABLE_LOCAL  reduce using rule 21 (valor -> variables .)
    VARIABLE_GLOBAL reduce using rule 21 (valor -> variables .)
    VARIABLE_OBJETO reduce using rule 21 (valor -> variables .)
    VARIABLE_CLASE  reduce using rule 21 (valor -> variables .)
    CONSTANTE       reduce using rule 21 (valor -> variables .)
    ENTERO          reduce using rule 21 (valor -> variables .)
    $end            reduce using rule 21 (valor -> variables .)
    END             reduce using rule 21 (valor -> variables .)

  ! IGUAL           [ reduce using rule 21 (valor -> variables .) ]


state 8

    (9) expresion -> valor .
    (10) expresion -> valor . operadorMat expresion
    (12) operadorMat -> . MAS
    (13) operadorMat -> . RESTA
    (14) operadorMat -> . PROD
    (15) operadorMat -> . DIVISION

    MAYOR           reduce using rule 9 (expresion -> valor .)
    MENOR           reduce using rule 9 (expresion -> valor .)
    IGUAL           reduce using rule 9 (expresion -> valor .)
    DIFERENTE       reduce using rule 9 (expresion -> valor .)
    WHILE           reduce using rule 9 (expresion -> valor .)
    VARIABLE_LOCAL  reduce using rule 9 (expresion -> valor .)
    VARIABLE_GLOBAL reduce using rule 9 (expresion -> valor .)
    VARIABLE_OBJETO reduce using rule 9 (expresion -> valor .)
    VARIABLE_CLASE  reduce using rule 9 (expresion -> valor .)
    CONSTANTE       reduce using rule 9 (expresion -> valor .)
    ENTERO          reduce using rule 9 (expresion -> valor .)
    $end            reduce using rule 9 (expresion -> valor .)
    END             reduce using rule 9 (expresion -> valor .)
    DO              reduce using rule 9 (expresion -> valor .)
    MAS             shift and go to state 24
    RESTA           shift and go to state 25
    PROD            shift and go to state 26
    DIVISION        shift and go to state 27

    operadorMat                    shift and go to state 23

state 9

    (7) sentenciaWHILE -> WHILE . comparacion DO codigo END
    (11) comparacion -> . expresion operadorComp expresion
    (9) expresion -> . valor
    (10) expresion -> . valor operadorMat expresion
    (20) valor -> . ENTERO
    (21) valor -> . variables
    (22) variables -> . VARIABLE_LOCAL
    (23) variables -> . VARIABLE_GLOBAL
    (24) variables -> . VARIABLE_OBJETO
    (25) variables -> . VARIABLE_CLASE
    (26) variables -> . CONSTANTE

    ENTERO          shift and go to state 15
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 11
    VARIABLE_OBJETO shift and go to state 12
    VARIABLE_CLASE  shift and go to state 13
    CONSTANTE       shift and go to state 14

    comparacion                    shift and go to state 28
    expresion                      shift and go to state 29
    valor                          shift and go to state 8
    variables                      shift and go to state 30

state 10

    (22) variables -> VARIABLE_LOCAL .

    IGUAL           reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    MAS             reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    RESTA           reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    PROD            reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    DIVISION        reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    MAYOR           reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    MENOR           reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    DIFERENTE       reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    WHILE           reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    VARIABLE_LOCAL  reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    VARIABLE_GLOBAL reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    VARIABLE_OBJETO reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    VARIABLE_CLASE  reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    CONSTANTE       reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    ENTERO          reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    $end            reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    END             reduce using rule 22 (variables -> VARIABLE_LOCAL .)
    DO              reduce using rule 22 (variables -> VARIABLE_LOCAL .)


state 11

    (23) variables -> VARIABLE_GLOBAL .

    IGUAL           reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    MAS             reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    RESTA           reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    PROD            reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    DIVISION        reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    MAYOR           reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    MENOR           reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    DIFERENTE       reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    WHILE           reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    VARIABLE_LOCAL  reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    VARIABLE_GLOBAL reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    VARIABLE_OBJETO reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    VARIABLE_CLASE  reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    CONSTANTE       reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    ENTERO          reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    $end            reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    END             reduce using rule 23 (variables -> VARIABLE_GLOBAL .)
    DO              reduce using rule 23 (variables -> VARIABLE_GLOBAL .)


state 12

    (24) variables -> VARIABLE_OBJETO .

    IGUAL           reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    MAS             reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    RESTA           reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    PROD            reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    DIVISION        reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    MAYOR           reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    MENOR           reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    DIFERENTE       reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    WHILE           reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    VARIABLE_LOCAL  reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    VARIABLE_GLOBAL reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    VARIABLE_OBJETO reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    VARIABLE_CLASE  reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    CONSTANTE       reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    ENTERO          reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    $end            reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    END             reduce using rule 24 (variables -> VARIABLE_OBJETO .)
    DO              reduce using rule 24 (variables -> VARIABLE_OBJETO .)


state 13

    (25) variables -> VARIABLE_CLASE .

    IGUAL           reduce using rule 25 (variables -> VARIABLE_CLASE .)
    MAS             reduce using rule 25 (variables -> VARIABLE_CLASE .)
    RESTA           reduce using rule 25 (variables -> VARIABLE_CLASE .)
    PROD            reduce using rule 25 (variables -> VARIABLE_CLASE .)
    DIVISION        reduce using rule 25 (variables -> VARIABLE_CLASE .)
    MAYOR           reduce using rule 25 (variables -> VARIABLE_CLASE .)
    MENOR           reduce using rule 25 (variables -> VARIABLE_CLASE .)
    DIFERENTE       reduce using rule 25 (variables -> VARIABLE_CLASE .)
    WHILE           reduce using rule 25 (variables -> VARIABLE_CLASE .)
    VARIABLE_LOCAL  reduce using rule 25 (variables -> VARIABLE_CLASE .)
    VARIABLE_GLOBAL reduce using rule 25 (variables -> VARIABLE_CLASE .)
    VARIABLE_OBJETO reduce using rule 25 (variables -> VARIABLE_CLASE .)
    VARIABLE_CLASE  reduce using rule 25 (variables -> VARIABLE_CLASE .)
    CONSTANTE       reduce using rule 25 (variables -> VARIABLE_CLASE .)
    ENTERO          reduce using rule 25 (variables -> VARIABLE_CLASE .)
    $end            reduce using rule 25 (variables -> VARIABLE_CLASE .)
    END             reduce using rule 25 (variables -> VARIABLE_CLASE .)
    DO              reduce using rule 25 (variables -> VARIABLE_CLASE .)


state 14

    (26) variables -> CONSTANTE .

    IGUAL           reduce using rule 26 (variables -> CONSTANTE .)
    MAS             reduce using rule 26 (variables -> CONSTANTE .)
    RESTA           reduce using rule 26 (variables -> CONSTANTE .)
    PROD            reduce using rule 26 (variables -> CONSTANTE .)
    DIVISION        reduce using rule 26 (variables -> CONSTANTE .)
    MAYOR           reduce using rule 26 (variables -> CONSTANTE .)
    MENOR           reduce using rule 26 (variables -> CONSTANTE .)
    DIFERENTE       reduce using rule 26 (variables -> CONSTANTE .)
    WHILE           reduce using rule 26 (variables -> CONSTANTE .)
    VARIABLE_LOCAL  reduce using rule 26 (variables -> CONSTANTE .)
    VARIABLE_GLOBAL reduce using rule 26 (variables -> CONSTANTE .)
    VARIABLE_OBJETO reduce using rule 26 (variables -> CONSTANTE .)
    VARIABLE_CLASE  reduce using rule 26 (variables -> CONSTANTE .)
    CONSTANTE       reduce using rule 26 (variables -> CONSTANTE .)
    ENTERO          reduce using rule 26 (variables -> CONSTANTE .)
    $end            reduce using rule 26 (variables -> CONSTANTE .)
    END             reduce using rule 26 (variables -> CONSTANTE .)
    DO              reduce using rule 26 (variables -> CONSTANTE .)


state 15

    (20) valor -> ENTERO .

    MAS             reduce using rule 20 (valor -> ENTERO .)
    RESTA           reduce using rule 20 (valor -> ENTERO .)
    PROD            reduce using rule 20 (valor -> ENTERO .)
    DIVISION        reduce using rule 20 (valor -> ENTERO .)
    MAYOR           reduce using rule 20 (valor -> ENTERO .)
    MENOR           reduce using rule 20 (valor -> ENTERO .)
    IGUAL           reduce using rule 20 (valor -> ENTERO .)
    DIFERENTE       reduce using rule 20 (valor -> ENTERO .)
    WHILE           reduce using rule 20 (valor -> ENTERO .)
    VARIABLE_LOCAL  reduce using rule 20 (valor -> ENTERO .)
    VARIABLE_GLOBAL reduce using rule 20 (valor -> ENTERO .)
    VARIABLE_OBJETO reduce using rule 20 (valor -> ENTERO .)
    VARIABLE_CLASE  reduce using rule 20 (valor -> ENTERO .)
    CONSTANTE       reduce using rule 20 (valor -> ENTERO .)
    ENTERO          reduce using rule 20 (valor -> ENTERO .)
    $end            reduce using rule 20 (valor -> ENTERO .)
    END             reduce using rule 20 (valor -> ENTERO .)
    DO              reduce using rule 20 (valor -> ENTERO .)


state 16

    (2) codigo -> algoritmo codigo .

    $end            reduce using rule 2 (codigo -> algoritmo codigo .)
    END             reduce using rule 2 (codigo -> algoritmo codigo .)


state 17

    (11) comparacion -> expresion operadorComp . expresion
    (9) expresion -> . valor
    (10) expresion -> . valor operadorMat expresion
    (20) valor -> . ENTERO
    (21) valor -> . variables
    (22) variables -> . VARIABLE_LOCAL
    (23) variables -> . VARIABLE_GLOBAL
    (24) variables -> . VARIABLE_OBJETO
    (25) variables -> . VARIABLE_CLASE
    (26) variables -> . CONSTANTE

    ENTERO          shift and go to state 15
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 11
    VARIABLE_OBJETO shift and go to state 12
    VARIABLE_CLASE  shift and go to state 13
    CONSTANTE       shift and go to state 14

    expresion                      shift and go to state 31
    valor                          shift and go to state 8
    variables                      shift and go to state 30

state 18

    (16) operadorComp -> MAYOR .

    ENTERO          reduce using rule 16 (operadorComp -> MAYOR .)
    VARIABLE_LOCAL  reduce using rule 16 (operadorComp -> MAYOR .)
    VARIABLE_GLOBAL reduce using rule 16 (operadorComp -> MAYOR .)
    VARIABLE_OBJETO reduce using rule 16 (operadorComp -> MAYOR .)
    VARIABLE_CLASE  reduce using rule 16 (operadorComp -> MAYOR .)
    CONSTANTE       reduce using rule 16 (operadorComp -> MAYOR .)


state 19

    (17) operadorComp -> MENOR .

    ENTERO          reduce using rule 17 (operadorComp -> MENOR .)
    VARIABLE_LOCAL  reduce using rule 17 (operadorComp -> MENOR .)
    VARIABLE_GLOBAL reduce using rule 17 (operadorComp -> MENOR .)
    VARIABLE_OBJETO reduce using rule 17 (operadorComp -> MENOR .)
    VARIABLE_CLASE  reduce using rule 17 (operadorComp -> MENOR .)
    CONSTANTE       reduce using rule 17 (operadorComp -> MENOR .)


state 20

    (18) operadorComp -> IGUAL .

    ENTERO          reduce using rule 18 (operadorComp -> IGUAL .)
    VARIABLE_LOCAL  reduce using rule 18 (operadorComp -> IGUAL .)
    VARIABLE_GLOBAL reduce using rule 18 (operadorComp -> IGUAL .)
    VARIABLE_OBJETO reduce using rule 18 (operadorComp -> IGUAL .)
    VARIABLE_CLASE  reduce using rule 18 (operadorComp -> IGUAL .)
    CONSTANTE       reduce using rule 18 (operadorComp -> IGUAL .)


state 21

    (19) operadorComp -> DIFERENTE .

    ENTERO          reduce using rule 19 (operadorComp -> DIFERENTE .)
    VARIABLE_LOCAL  reduce using rule 19 (operadorComp -> DIFERENTE .)
    VARIABLE_GLOBAL reduce using rule 19 (operadorComp -> DIFERENTE .)
    VARIABLE_OBJETO reduce using rule 19 (operadorComp -> DIFERENTE .)
    VARIABLE_CLASE  reduce using rule 19 (operadorComp -> DIFERENTE .)
    CONSTANTE       reduce using rule 19 (operadorComp -> DIFERENTE .)


state 22

    (8) asignacion -> variables IGUAL . expresion
    (9) expresion -> . valor
    (10) expresion -> . valor operadorMat expresion
    (20) valor -> . ENTERO
    (21) valor -> . variables
    (22) variables -> . VARIABLE_LOCAL
    (23) variables -> . VARIABLE_GLOBAL
    (24) variables -> . VARIABLE_OBJETO
    (25) variables -> . VARIABLE_CLASE
    (26) variables -> . CONSTANTE

    ENTERO          shift and go to state 15
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 11
    VARIABLE_OBJETO shift and go to state 12
    VARIABLE_CLASE  shift and go to state 13
    CONSTANTE       shift and go to state 14

    variables                      shift and go to state 30
    expresion                      shift and go to state 32
    valor                          shift and go to state 8

state 23

    (10) expresion -> valor operadorMat . expresion
    (9) expresion -> . valor
    (10) expresion -> . valor operadorMat expresion
    (20) valor -> . ENTERO
    (21) valor -> . variables
    (22) variables -> . VARIABLE_LOCAL
    (23) variables -> . VARIABLE_GLOBAL
    (24) variables -> . VARIABLE_OBJETO
    (25) variables -> . VARIABLE_CLASE
    (26) variables -> . CONSTANTE

    ENTERO          shift and go to state 15
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 11
    VARIABLE_OBJETO shift and go to state 12
    VARIABLE_CLASE  shift and go to state 13
    CONSTANTE       shift and go to state 14

    valor                          shift and go to state 8
    expresion                      shift and go to state 33
    variables                      shift and go to state 30

state 24

    (12) operadorMat -> MAS .

    ENTERO          reduce using rule 12 (operadorMat -> MAS .)
    VARIABLE_LOCAL  reduce using rule 12 (operadorMat -> MAS .)
    VARIABLE_GLOBAL reduce using rule 12 (operadorMat -> MAS .)
    VARIABLE_OBJETO reduce using rule 12 (operadorMat -> MAS .)
    VARIABLE_CLASE  reduce using rule 12 (operadorMat -> MAS .)
    CONSTANTE       reduce using rule 12 (operadorMat -> MAS .)


state 25

    (13) operadorMat -> RESTA .

    ENTERO          reduce using rule 13 (operadorMat -> RESTA .)
    VARIABLE_LOCAL  reduce using rule 13 (operadorMat -> RESTA .)
    VARIABLE_GLOBAL reduce using rule 13 (operadorMat -> RESTA .)
    VARIABLE_OBJETO reduce using rule 13 (operadorMat -> RESTA .)
    VARIABLE_CLASE  reduce using rule 13 (operadorMat -> RESTA .)
    CONSTANTE       reduce using rule 13 (operadorMat -> RESTA .)


state 26

    (14) operadorMat -> PROD .

    ENTERO          reduce using rule 14 (operadorMat -> PROD .)
    VARIABLE_LOCAL  reduce using rule 14 (operadorMat -> PROD .)
    VARIABLE_GLOBAL reduce using rule 14 (operadorMat -> PROD .)
    VARIABLE_OBJETO reduce using rule 14 (operadorMat -> PROD .)
    VARIABLE_CLASE  reduce using rule 14 (operadorMat -> PROD .)
    CONSTANTE       reduce using rule 14 (operadorMat -> PROD .)


state 27

    (15) operadorMat -> DIVISION .

    ENTERO          reduce using rule 15 (operadorMat -> DIVISION .)
    VARIABLE_LOCAL  reduce using rule 15 (operadorMat -> DIVISION .)
    VARIABLE_GLOBAL reduce using rule 15 (operadorMat -> DIVISION .)
    VARIABLE_OBJETO reduce using rule 15 (operadorMat -> DIVISION .)
    VARIABLE_CLASE  reduce using rule 15 (operadorMat -> DIVISION .)
    CONSTANTE       reduce using rule 15 (operadorMat -> DIVISION .)


state 28

    (7) sentenciaWHILE -> WHILE comparacion . DO codigo END

    DO              shift and go to state 34


state 29

    (11) comparacion -> expresion . operadorComp expresion
    (16) operadorComp -> . MAYOR
    (17) operadorComp -> . MENOR
    (18) operadorComp -> . IGUAL
    (19) operadorComp -> . DIFERENTE

    MAYOR           shift and go to state 18
    MENOR           shift and go to state 19
    IGUAL           shift and go to state 20
    DIFERENTE       shift and go to state 21

    operadorComp                   shift and go to state 17

state 30

    (21) valor -> variables .

    MAS             reduce using rule 21 (valor -> variables .)
    RESTA           reduce using rule 21 (valor -> variables .)
    PROD            reduce using rule 21 (valor -> variables .)
    DIVISION        reduce using rule 21 (valor -> variables .)
    MAYOR           reduce using rule 21 (valor -> variables .)
    MENOR           reduce using rule 21 (valor -> variables .)
    IGUAL           reduce using rule 21 (valor -> variables .)
    DIFERENTE       reduce using rule 21 (valor -> variables .)
    WHILE           reduce using rule 21 (valor -> variables .)
    VARIABLE_LOCAL  reduce using rule 21 (valor -> variables .)
    VARIABLE_GLOBAL reduce using rule 21 (valor -> variables .)
    VARIABLE_OBJETO reduce using rule 21 (valor -> variables .)
    VARIABLE_CLASE  reduce using rule 21 (valor -> variables .)
    CONSTANTE       reduce using rule 21 (valor -> variables .)
    ENTERO          reduce using rule 21 (valor -> variables .)
    $end            reduce using rule 21 (valor -> variables .)
    END             reduce using rule 21 (valor -> variables .)
    DO              reduce using rule 21 (valor -> variables .)


state 31

    (11) comparacion -> expresion operadorComp expresion .

    WHILE           reduce using rule 11 (comparacion -> expresion operadorComp expresion .)
    VARIABLE_LOCAL  reduce using rule 11 (comparacion -> expresion operadorComp expresion .)
    VARIABLE_GLOBAL reduce using rule 11 (comparacion -> expresion operadorComp expresion .)
    VARIABLE_OBJETO reduce using rule 11 (comparacion -> expresion operadorComp expresion .)
    VARIABLE_CLASE  reduce using rule 11 (comparacion -> expresion operadorComp expresion .)
    CONSTANTE       reduce using rule 11 (comparacion -> expresion operadorComp expresion .)
    ENTERO          reduce using rule 11 (comparacion -> expresion operadorComp expresion .)
    $end            reduce using rule 11 (comparacion -> expresion operadorComp expresion .)
    END             reduce using rule 11 (comparacion -> expresion operadorComp expresion .)
    DO              reduce using rule 11 (comparacion -> expresion operadorComp expresion .)


state 32

    (8) asignacion -> variables IGUAL expresion .

    WHILE           reduce using rule 8 (asignacion -> variables IGUAL expresion .)
    VARIABLE_LOCAL  reduce using rule 8 (asignacion -> variables IGUAL expresion .)
    VARIABLE_GLOBAL reduce using rule 8 (asignacion -> variables IGUAL expresion .)
    VARIABLE_OBJETO reduce using rule 8 (asignacion -> variables IGUAL expresion .)
    VARIABLE_CLASE  reduce using rule 8 (asignacion -> variables IGUAL expresion .)
    CONSTANTE       reduce using rule 8 (asignacion -> variables IGUAL expresion .)
    ENTERO          reduce using rule 8 (asignacion -> variables IGUAL expresion .)
    $end            reduce using rule 8 (asignacion -> variables IGUAL expresion .)
    END             reduce using rule 8 (asignacion -> variables IGUAL expresion .)


state 33

    (10) expresion -> valor operadorMat expresion .

    MAYOR           reduce using rule 10 (expresion -> valor operadorMat expresion .)
    MENOR           reduce using rule 10 (expresion -> valor operadorMat expresion .)
    IGUAL           reduce using rule 10 (expresion -> valor operadorMat expresion .)
    DIFERENTE       reduce using rule 10 (expresion -> valor operadorMat expresion .)
    WHILE           reduce using rule 10 (expresion -> valor operadorMat expresion .)
    VARIABLE_LOCAL  reduce using rule 10 (expresion -> valor operadorMat expresion .)
    VARIABLE_GLOBAL reduce using rule 10 (expresion -> valor operadorMat expresion .)
    VARIABLE_OBJETO reduce using rule 10 (expresion -> valor operadorMat expresion .)
    VARIABLE_CLASE  reduce using rule 10 (expresion -> valor operadorMat expresion .)
    CONSTANTE       reduce using rule 10 (expresion -> valor operadorMat expresion .)
    ENTERO          reduce using rule 10 (expresion -> valor operadorMat expresion .)
    $end            reduce using rule 10 (expresion -> valor operadorMat expresion .)
    END             reduce using rule 10 (expresion -> valor operadorMat expresion .)
    DO              reduce using rule 10 (expresion -> valor operadorMat expresion .)


state 34

    (7) sentenciaWHILE -> WHILE comparacion DO . codigo END
    (1) codigo -> . algoritmo
    (2) codigo -> . algoritmo codigo
    (3) algoritmo -> . asignacion
    (4) algoritmo -> . expresion
    (5) algoritmo -> . comparacion
    (6) algoritmo -> . sentenciaWHILE
    (8) asignacion -> . variables IGUAL expresion
    (9) expresion -> . valor
    (10) expresion -> . valor operadorMat expresion
    (11) comparacion -> . expresion operadorComp expresion
    (7) sentenciaWHILE -> . WHILE comparacion DO codigo END
    (22) variables -> . VARIABLE_LOCAL
    (23) variables -> . VARIABLE_GLOBAL
    (24) variables -> . VARIABLE_OBJETO
    (25) variables -> . VARIABLE_CLASE
    (26) variables -> . CONSTANTE
    (20) valor -> . ENTERO
    (21) valor -> . variables

    WHILE           shift and go to state 9
    VARIABLE_LOCAL  shift and go to state 10
    VARIABLE_GLOBAL shift and go to state 11
    VARIABLE_OBJETO shift and go to state 12
    VARIABLE_CLASE  shift and go to state 13
    CONSTANTE       shift and go to state 14
    ENTERO          shift and go to state 15

    comparacion                    shift and go to state 5
    codigo                         shift and go to state 35
    algoritmo                      shift and go to state 2
    asignacion                     shift and go to state 3
    expresion                      shift and go to state 4
    sentenciaWHILE                 shift and go to state 6
    variables                      shift and go to state 7
    valor                          shift and go to state 8

state 35

    (7) sentenciaWHILE -> WHILE comparacion DO codigo . END

    END             shift and go to state 36


state 36

    (7) sentenciaWHILE -> WHILE comparacion DO codigo END .

    WHILE           reduce using rule 7 (sentenciaWHILE -> WHILE comparacion DO codigo END .)
    VARIABLE_LOCAL  reduce using rule 7 (sentenciaWHILE -> WHILE comparacion DO codigo END .)
    VARIABLE_GLOBAL reduce using rule 7 (sentenciaWHILE -> WHILE comparacion DO codigo END .)
    VARIABLE_OBJETO reduce using rule 7 (sentenciaWHILE -> WHILE comparacion DO codigo END .)
    VARIABLE_CLASE  reduce using rule 7 (sentenciaWHILE -> WHILE comparacion DO codigo END .)
    CONSTANTE       reduce using rule 7 (sentenciaWHILE -> WHILE comparacion DO codigo END .)
    ENTERO          reduce using rule 7 (sentenciaWHILE -> WHILE comparacion DO codigo END .)
    $end            reduce using rule 7 (sentenciaWHILE -> WHILE comparacion DO codigo END .)
    END             reduce using rule 7 (sentenciaWHILE -> WHILE comparacion DO codigo END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL in state 7 resolved as shift
